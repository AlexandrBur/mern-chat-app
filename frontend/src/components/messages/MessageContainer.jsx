import React, { useEffect, useState } from 'react';
import Messages from './Messages';
import MessageInput from './MessageInput';
import { TiMessages } from 'react-icons/ti';
import useConversation from '../../zustand/useConversation';
import { useAuthContext } from '../../context/AuthContext';
import EmojiPicker from 'emoji-picker-react';

const MessageContainer = () => {
  const { selectedConversation, setSelectedConversation, isSidebarOpen, toggleSidebar } =
    useConversation();
  const { authUser } = useAuthContext();
  const [showEmojiPicker, setShowEmojiPicker] = useState(false); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–∞–Ω–µ–ª–∏ —ç–º–æ–¥–∑–∏
  const [message, setMessage] = useState(''); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è

  useEffect(() => {
    return () => {
      // Cleanup function (unmounts)
      setSelectedConversation(null);
    };
  }, [setSelectedConversation]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —ç–º–æ–¥–∑–∏
  const handleEmojiClick = (emojiObject) => {
    setMessage((prevMessage) => prevMessage + emojiObject.emoji); // –î–æ–±–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ –∫ —Ç–µ–∫—Å—Ç—É —Å–æ–æ–±—â–µ–Ω–∏—è
    setShowEmojiPicker(false); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å —ç–º–æ–¥–∑–∏
  };

  return (
    <div className="w-full h-full flex flex-col relative">
      {/* –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è/—Å–∫—Ä—ã—Ç–∏—è –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏ */}
      {!selectedConversation ? (
        // –ï—Å–ª–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä –Ω–µ –≤—ã–±—Ä–∞–Ω, –∫–Ω–æ–ø–∫–∞ –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É —ç–∫—Ä–∞–Ω–∞
        <button
          onClick={toggleSidebar}
          className="md:hidden absolute top-2 right-2 bg-indigo-500 text-white p-2 rounded-lg z-20">
          <div className="w-6 h-6 relative flex items-center justify-center">
            {/* –ë—É—Ä–≥–µ—Ä / –ö—Ä–µ—Å—Ç–∏–∫ */}
            <div
              className={`absolute w-6 h-0.5 bg-white transition-all duration-500 ease-in-out ${
                isSidebarOpen ? 'rotate-45' : '-translate-y-1.5'
              }`}></div>
            <div
              className={`absolute w-6 h-0.5 bg-white transition-all duration-500 ease-in-out ${
                isSidebarOpen ? 'opacity-0' : 'opacity-100'
              }`}></div>
            <div
              className={`absolute w-6 h-0.5 bg-white transition-all duration-500 ease-in-out ${
                isSidebarOpen ? '-rotate-45' : 'translate-y-1.5'
              }`}></div>
          </div>
        </button>
      ) : (
        // –ï—Å–ª–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä –≤—ã–±—Ä–∞–Ω, –∫–Ω–æ–ø–∫–∞ –≤–Ω—É—Ç—Ä–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞
        <div className="bg-gray-800 px-4 py-2 mb-2 flex justify-between items-center">
          <div>
            <span className="label-text">–ö–æ–º—É:</span>{' '}
            <span className="text-white font-bold">{selectedConversation.fullName}</span>
          </div>
          <button
            onClick={toggleSidebar}
            className="md:hidden bg-indigo-500 text-white p-2 rounded-lg">
            <div className="w-6 h-6 relative flex items-center justify-center">
              {/* –ë—É—Ä–≥–µ—Ä / –ö—Ä–µ—Å—Ç–∏–∫ */}
              <div
                className={`absolute w-6 h-0.5 bg-white transition-all duration-500 ease-in-out ${
                  isSidebarOpen ? 'rotate-45' : '-translate-y-1.5'
                }`}></div>
              <div
                className={`absolute w-6 h-0.5 bg-white transition-all duration-500 ease-in-out ${
                  isSidebarOpen ? 'opacity-0' : 'opacity-100'
                }`}></div>
              <div
                className={`absolute w-6 h-0.5 bg-white transition-all duration-500 ease-in-out ${
                  isSidebarOpen ? '-rotate-45' : 'translate-y-1.5'
                }`}></div>
            </div>
          </button>
        </div>
      )}

      {!selectedConversation ? (
        <NoChatSelected />
      ) : (
        <>
          <Messages />
          {/* –ü–∞–Ω–µ–ª—å —ç–º–æ–¥–∑–∏ */}
          {showEmojiPicker && (
            <div className="absolute bottom-16 right-4 z-30">
              <EmojiPicker
                onEmojiClick={handleEmojiClick}
                theme="dark" // –¢–µ–º–Ω–∞—è —Ç–µ–º–∞
                skinTonesDisabled // –û—Ç–∫–ª—é—á–∞–µ–º –≤—ã–±–æ—Ä —Ç–æ–Ω–æ–≤ –∫–æ–∂–∏
                searchDisabled // –û—Ç–∫–ª—é—á–∞–µ–º –ø–æ–∏—Å–∫ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
                previewConfig={{ showPreview: false }} // –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–≤—å—é
                width={300} // –®–∏—Ä–∏–Ω–∞ –ø–∞–Ω–µ–ª–∏
                height={400} // –í—ã—Å–æ—Ç–∞ –ø–∞–Ω–µ–ª–∏
                emojiStyle="native" // –°—Ç–∏–ª—å —ç–º–æ–¥–∑–∏
                suggestedEmojisMode={false} // –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–µ —ç–º–æ–¥–∑–∏
                skinTonePickerLocation="PREVIEW" // –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞ —Ç–æ–Ω–∞ –∫–æ–∂–∏
                lazyLoadEmojis // –õ–µ–Ω–∏–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —ç–º–æ–¥–∑–∏
              />
            </div>
          )}
          {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∏–Ω–ø—É—Ç–∞ –∏ –∫–Ω–æ–ø–∫–∏ —ç–º–æ–¥–∑–∏ */}
          <div className="flex items-center p-2 bg-transparent">
            {/* –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–∞–Ω–µ–ª–∏ —ç–º–æ–¥–∑–∏ */}
            <button
              onClick={() => setShowEmojiPicker(!showEmojiPicker)}
              className="p-2 text-gray-400 hover:text-white bg-gray-800 rounded-lg mr-2">
              üòä
            </button>
            {/* –ò–Ω–ø—É—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π */}
            <div className="flex-1">
              <MessageInput message={message} setMessage={setMessage} />
            </div>
          </div>
        </>
      )}
    </div>
  );
};

export default MessageContainer;

const NoChatSelected = () => {
  const { authUser } = useAuthContext();
  return (
    <div className="flex items-center justify-center w-full h-full">
      <div className="px-4 text-center sm:text-lg md:text-xl text-gray-200 font-semibold flex flex-col items-center gap-2">
        <p>Welcome üëã {authUser.fullName} ‚ùÑ</p>
        <p>Select a chat to start messaging</p>
        <TiMessages className="text-3xl md:text-5xl text-center" />
      </div>
    </div>
  );
};